##############################################################################
# User plugin space.

import sys
from os.path import expanduser, join
sys.path.append(join(expanduser('~'), '.vy'))
##############################################################################
# Functions used to load the plugins.
from vyapp.plugins import autoload, autocall

##############################################################################
# Plugin list.
import vyapp.plugins.shell
autoload(vyapp.plugins.shell)


import vyapp.plugins.url_source
autoload(vyapp.plugins.url_source)


# It creates the standard modes.
import vyapp.plugins.mode
autoload(vyapp.plugins.mode)


# Python auto completion plugin using jedi.
import vyapp.plugins.omen.auto
autoload(vyapp.plugins.omen.auto)


# The isearch plugin.
import vyapp.plugins.isearch
autoload(vyapp.plugins.isearch)


# Shifting blocks of code.
import vyapp.plugins.shift
autoload(vyapp.plugins.shift, width=4, char=' ')


# Used to quickly jump to the end/start of the cursor line.
import vyapp.plugins.line_jumps
autoload(vyapp.plugins.line_jumps)


# Used to quickly jump to the end/start of the file.
import vyapp.plugins.text_jumps
autoload(vyapp.plugins.text_jumps)


# Used to deal with panels.
import vyapp.plugins.panel
autoload(vyapp.plugins.panel)


# Used to deal with tabs.
import vyapp.plugins.notebook
autoload(vyapp.plugins.notebook)


# Implement keycommands to select text from the cursor position to the start/end of the file.
import vyapp.plugins.select_text
autoload(vyapp.plugins.select_text)


# Default events for 'Text'.
import vyapp.plugins.default
autoload(vyapp.plugins.default)


# Implement keycommands to undo/redo operations.
import vyapp.plugins.undo
autoload(vyapp.plugins.undo)


# It implements keycomands to move the cursor up, down, left, right.
import vyapp.plugins.move_cursor
autoload(vyapp.plugins.move_cursor)


# Quick search.
# import vyapp.plugins.quicksearch
# autoload(vyapp.plugins.quicksearch)


# import vyapp.plugins.screen_search
# autoload(vyapp.plugins.screen_search)


# A different implementation of quicksearch.
import vyapp.plugins.leap
autoload(vyapp.plugins.leap)


# A different implementation of screen_search
import vyapp.plugins.hop
autoload(vyapp.plugins.hop)


# It implements keycommands to select/unselect a char on the cursor.
import vyapp.plugins.select_char
autoload(vyapp.plugins.select_char)


# Used to insert tab_size spaces.
import vyapp.plugins.tab
autoload(vyapp.plugins.tab, 
         tab_scheme= {'.rb': (2, ' '),
                      '.c' : (4, ' '),
                      '.cpp' : (4, ' '),
                      '.java' : (4, ' '),
                      '.py': (4, ' ')},
         default_tab_size=4)


# Used to jump quickly to chars.
import vyapp.plugins.seek_symbol
autoload(vyapp.plugins.seek_symbol)


# This plugin implements keycommands to scroll lines.
import vyapp.plugins.scroll_line
autoload(vyapp.plugins.scroll_line)


# This plugin implements keycommands to scroll pages.
import vyapp.plugins.scroll_page
autoload(vyapp.plugins.scroll_page)


# This plugin implements keycommands to jump quickly
# to the next/previous word from the cursor position.
import vyapp.plugins.word_jumps
autoload(vyapp.plugins.word_jumps)


# Used to select the text between pairs of (), [], {} when 
# the cursor is placed over one of the (), {}, [].
import vyapp.plugins.select_sym_pair
autoload(vyapp.plugins.select_sym_pair)


# Implement a keycomand to select/unselect a line.
import vyapp.plugins.select_line
autoload(vyapp.plugins.select_line)


# Implement keycommands to insert a line up/down.
import vyapp.plugins.insert_line
autoload(vyapp.plugins.insert_line)


# This plugin implements keys to comment pieces of text inside 
# programming language files.
import vyapp.plugins.inline_comment
autoload(vyapp.plugins.inline_comment)


# Used to set the cursor over a line.
import vyapp.plugins.set_pos
autoload(vyapp.plugins.set_pos)

# Used to debug python applications.
import vyapp.plugins.pdb.debug
autoload(vyapp.plugins.pdb.debug)


# Implements vy stdin and stdout scheme for talking to extern processes.
import vyapp.plugins.box
autoload(vyapp.plugins.box)


# Used to execute python code on the fly, things like python functions
# to substitute text, format stuff etc, load plugins.
import vyapp.plugins.cmd
autoload(vyapp.plugins.cmd)


# Used to search for text/format text with regex.
import vyapp.plugins.find
autoload(vyapp.plugins.find)


# It implements ways of opening/saving files.
import vyapp.plugins.io
autoload(vyapp.plugins.io)


# The main built-in key commands.
# It doesn't implement vim keys. It is an allusion to vi improved :P
import vyapp.plugins.vim
autoload(vyapp.plugins.vim)


# Used to talk to extern processes, playing with interpreters etc.
import vyapp.plugins.ibash
autoload(vyapp.plugins.ibash)


# Used to highlight pairs of character like () {} [].
# It is useful when playing with lisp things.
import vyapp.plugins.match_sym_pair
autoload(vyapp.plugins.match_sym_pair)


# Used to complete words when Control-q is issued on insert mode.
import vyapp.plugins.word_complete
autoload(vyapp.plugins.word_complete)


# This plugin highlights links when files are opened.
import vyapp.plugins.hlink
autoload(vyapp.plugins.hlink)


# It implementes some features like a key command
# to copy to the clipboard the name of the actual opened file.
import vyapp.plugins.clipboard
autoload(vyapp.plugins.clipboard)


# This plugin is used to place the cursor over the next occurrence of
# '(', ')', '.', '[', ']', '{', '}', ',', ':', ';', "'", '"'
import vyapp.plugins.symbol_jumps
autoload(vyapp.plugins.symbol_jumps)


# It is a built-in plugin that updates tab text and titles
# with filenames.
import vyapp.plugins.status
autoload(vyapp.plugins.status)


# syntax plugin is used to highlight code.
# The themes are placed in the themes folder.
import vyapp.plugins.syntax.spider
# import vyapp.plugins.syntax.themes.sun
# import vyapp.plugins.syntax.themes.dark
import vyapp.plugins.syntax.themes.snake
autoload(vyapp.plugins.syntax.spider, vyapp.plugins.syntax.themes.snake.THEME)


# shade plugin is used to mark lines then quickly
# go to the previous or next mark.
import vyapp.plugins.shade
autoload(vyapp.plugins.shade)


# range_sel plugin implemets selection commannds.
import vyapp.plugins.range_selection
autoload(vyapp.plugins.range_selection)


# block_selection plugin implemets selection commannds.
import vyapp.plugins.block_selection
autoload(vyapp.plugins.block_selection)


# toggle_mode plugin is used to switch quickly between
# modes. It is useful when debugging.
import vyapp.plugins.toggle_mode
autoload(vyapp.plugins.toggle_mode)


# Used to log the files that you opened/saved.
# You must change the '.vy_history' to something like.
# '/home/your_home/.vy_history'
# import vyapp.plugins.log_opened_file
# autoload(vyapp.plugins.log_opened_file, '.vy_history')

##############################################################################

def setup(area):
    area.config(blockcursor= True, 
                 insertbackground='red', 
                 background='black', 
                 foreground='yellow', 
                 font=('Monospace', 8, 'bold'), 
                 undo= True)

autocall(setup) 

##############################################################################
# Command plugins.

# Post files quickly with codepad.
from vyapp.plugins import codepad


# Plugin tools.
from vyapp.plugins import plugin_tools


# Implement lower and upper functions.
from vyapp.plugins import caps


# Count words.
import vyapp.plugins.count_words


# Managing file encodings.
import vyapp.plugins.codec


# Saving, opening files from vy python command line.
import vyapp.plugins.iocmd


# Find, replace, highlight patterns from vy python command line.
import vyapp.plugins.cmd_search













